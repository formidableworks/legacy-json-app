{"version":3,"sources":["monacoJsonEditor/configureMonaco.ts","monacoJsonEditor/schemas/deliveryConfigSchema.ts","monacoJsonEditor/schemas/trackingConfigSchema.ts","monacoJsonEditor/ConfirmDialog.tsx","monacoJsonEditor/EditorToolbar.tsx","monacoJsonEditor/statusBar/IssuesIndicator.tsx","monacoJsonEditor/statusBar/KeyboardShortcuts.tsx","monacoJsonEditor/statusBar/StatusBar.tsx","monacoJsonEditor/MonacoJsonEditor.tsx","redux/api/dashcoreApi.ts","redux/api/deliveryConfigApi.ts","App.tsx","redux/store.ts","mocks/handlers.ts","mocks/browser.ts","index.tsx"],"names":["schemaMatcher","DELIVERY_CONFIG","TRACKING_CONFIG","monacoJsonConf","validate","schemas","uri","fileMatch","schema","title","description","type","properties","customer_id","service_tier","enum","signature_required","address","addressee","premise_identifier","street","locality","post_town","postcode","pattern","required","handling_tags","items","minItems","uniqueItems","dimensions","width","minimum","maximum","height","depth","trackingId","trackingTech","beaconId","if","const","then","ConfirmDialog","props","isOpen","onClose","originalValue","modifiedValue","onConfirm","Dialog","open","aria-labelledby","aria-describedby","maxWidth","fullWidth","DialogTitle","id","DialogContent","original","modified","options","readOnly","language","DialogActions","Button","onClick","useStyles","makeStyles","theme","toolBar","display","gap","spacing","marginBottom","EditorToolbar","onSave","onFormat","classes","className","startIcon","variant","size","success","color","palette","main","info","warning","error","ListItemIcon","minWidth","IssuesIndicator","markers","onMarkerClick","useState","anchorEl","setAnchorEl","handleClose","Boolean","undefined","event","currentTarget","length","disabled","Popover","anchorOrigin","vertical","horizontal","List","dense","map","marker","ListItem","button","key","message","startColumn","startLineNumber","severity","MarkerSeverity","Hint","Tooltip","Info","Warning","Error","ListItemText","primary","secondary","contentRoot","flexDirection","margin","label","marginRight","plusChip","marginLeft","KeyboardShortcuts","React","transformOrigin","Chip","component","statusBar","justifyContent","borderStyle","borderWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderBottomRightRadius","borderBottomLeftRadius","borderColor","editorIsFocused","divider","StatusBar","loader","config","paths","vs","process","editorWrapper","isFocused","MonacoJsonEditor","value","onSubmit","editorPath","heightInRem","editorRef","useRef","editorValue","setEditorValue","setFocused","isConfirmDialogOpen","setConfirmDialogOpen","editorMarkers","setEditorMarkers","useEffect","current","trigger","onMount","editor","monaco","languages","json","jsonDefaults","setDiagnosticsOptions","getModel","updateOptions","tabSize","onDidFocusEditorText","onDidBlurEditorText","defaultLanguage","onChange","val","path","onValidate","setSelection","endLineNumber","endColumn","dashcoreApi","createApi","reducerPath","refetchOnMountOrArgChange","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","deliveryConfigApi","injectEndpoints","overrideExisting","builder","getDeliveryConfig","query","providesTags","updateDeliveryConfig","mutation","queryArgs","url","method","body","invalidatesTags","useGetDeliveryConfigQuery","useUpdateDeliveryConfigMutation","appRoot","App","jsonString","selectFromResult","result","data","updateTrigger","Typography","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","deliveryConfig","trackingConfig","handlers","rest","get","req","res","ctx","status","put","worker","setupWorker","rootNode","document","getElementById","unstable_createMuiStrictModeTheme","start","onUnhandledRequest","serviceWorker","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline"],"mappings":"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","file":"static/js/main.58d9c659.chunk.js","sourcesContent":["import { deliveryConfigJsonSchema } from './schemas/deliveryConfigSchema';\nimport { trackingConfigJsonSchema } from './schemas/trackingConfigSchema';\n\nexport const schemaMatcher = {\n  DELIVERY_CONFIG: 'delivery_config.json',\n  TRACKING_CONFIG: 'tracking_config.json',\n};\nexport type SchemaMatcher = keyof typeof schemaMatcher;\n\nexport const monacoJsonConf = {\n  validate: true,\n  schemas: [\n    {\n      uri: 'http://legacyjsonapp/delivery_config.json', // serves as an internal id, url does nothing.\n      fileMatch: [schemaMatcher.DELIVERY_CONFIG],\n      schema: deliveryConfigJsonSchema,\n    },\n    {\n      uri: 'http://legacyjsonapp/tracking_config.json',\n      fileMatch: [schemaMatcher.TRACKING_CONFIG],\n      schema: trackingConfigJsonSchema,\n    },\n  ],\n};\n","import { JSONSchema7 } from 'json-schema';\n\nexport const deliveryConfigJsonSchema: JSONSchema7 = {\n  title: 'delivery config',\n\n  description: 'All informational data required to complete a delivery.',\n  type: 'object',\n  properties: {\n    customer_id: { type: 'string', description: 'An identifier unique to each customer.' },\n    service_tier: {\n      type: 'string',\n      enum: ['next day', 'same day', 'priority one'],\n      description: 'Level of Dashcore delivery service.',\n    },\n    signature_required: { type: 'boolean' },\n    address: {\n      type: 'object',\n      description: 'Expected location of customer.',\n      properties: {\n        addressee: { type: 'string', description: 'Item recipient' },\n        premise_identifier: { type: 'string', description: 'street-level property identifier' },\n        street: {\n          type: 'string',\n          description:\n            'a public road in a city, town, or village, typically with houses and buildings on one or both sides.',\n        },\n        locality: {\n          type: 'string',\n          description:\n            'locality is a necessary part of the  postal address if there is more than one street of the same name in the given post town.',\n        },\n        post_town: { type: 'string', description: 'postal town' },\n        postcode: {\n          type: 'string',\n          pattern: '^[A-Z0-9_-]+$',\n          description:\n            'The UK postcode consists of five to seven alphanumeric characters which was created by Royal Mail. A full postcode designates an area with multiple addresses or a single delivery point.',\n        },\n      },\n      required: ['addressee', 'premise_identifier', 'postcode'],\n    },\n    handling_tags: {\n      description: 'Tags for the product',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    dimensions: {\n      type: 'object',\n      description: 'dimension of item to be delivered.',\n      properties: {\n        width: { type: 'number', minimum: 1, maximum: 7 },\n        height: { type: 'number', minimum: 1, maximum: 7 },\n        depth: { type: 'number', minimum: 1, maximum: 7 },\n      },\n    },\n  },\n  required: ['customer_id', 'address', 'service_tier'],\n};\n","import { JSONSchema7 } from 'json-schema';\n\nexport const trackingConfigJsonSchema: JSONSchema7 = {\n  title: 'tracking config',\n  description: 'All informational data required to track a delivery.',\n  type: 'object',\n  properties: {\n    trackingId: { description: 'An identifier unique to each unit.', type: 'number' },\n    trackingTech: {\n      description: 'Active tracking technology applied to unit.',\n      type: 'string',\n      enum: ['gps', 'beacon'],\n    },\n    beaconId: {\n      description: 'The beacons lookup id.',\n      type: 'number',\n    },\n  },\n  if: {\n    properties: {\n      trackingTech: { const: 'beacon' },\n    },\n    required: ['trackingTech'],\n  },\n  then: { required: ['beaconId'] },\n  required: ['trackingId'],\n};\n","import React from 'react';\nimport { DiffEditor } from '@monaco-editor/react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  originalValue: string;\n  modifiedValue: string | undefined;\n  onConfirm: () => void;\n}\nexport function ConfirmDialog(props: Props): JSX.Element {\n  const { isOpen, onClose, originalValue, modifiedValue, onConfirm } = props;\n  const ariaLabel = 'confirm-dialog-title';\n  const ariaDesc = 'confirm-dialog-description';\n\n  const handleConfirm = () => {\n    onClose();\n    onConfirm();\n  };\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby={ariaLabel}\n      aria-describedby={ariaDesc}\n      maxWidth=\"lg\"\n      fullWidth\n    >\n      <DialogTitle id={ariaLabel}>Review and confirm changes</DialogTitle>\n      <DialogContent>\n        <DiffEditor\n          original={originalValue}\n          modified={modifiedValue}\n          options={{ readOnly: true }}\n          language=\"json\"\n          height=\"25rem\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={handleConfirm}>Confirm</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles((theme) => ({\n  toolBar: {\n    display: 'flex',\n    gap: theme.spacing(0.5),\n    marginBottom: theme.spacing(0.5),\n  },\n}));\n\ninterface Props {\n  onSave: () => void;\n  onFormat: () => void;\n}\nexport function EditorToolbar(props: Props): JSX.Element {\n  const { onSave, onFormat } = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.toolBar}>\n      <Button onClick={onFormat} startIcon={<FlashOnIcon />} variant=\"outlined\" size=\"small\">\n        Format\n      </Button>\n      <Button onClick={onSave} startIcon={<SaveIcon />} variant=\"outlined\" size=\"small\">\n        Save\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Popover,\n  Tooltip,\n} from '@material-ui/core';\nimport { editor as editorApi, MarkerSeverity } from 'monaco-editor/esm/vs/editor/editor.api';\nimport { useState } from 'react';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  success: { color: theme.palette.success.main },\n  info: { color: theme.palette.info.main },\n  warning: { color: theme.palette.warning.main },\n  error: { color: theme.palette.error.main },\n  ListItemIcon: { minWidth: 36 },\n}));\n\ninterface Props {\n  markers: editorApi.IMarker[];\n  onMarkerClick: (marker: editorApi.IMarker) => void;\n}\nexport function IssuesIndicator(props: Props): JSX.Element {\n  const { markers, onMarkerClick } = props;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'issues-popover' : undefined;\n  return (\n    <div>\n      <Button\n        onClick={handleClick}\n        aria-describedby={id}\n        variant=\"text\"\n        startIcon={\n          markers.length > 0 ? (\n            <ErrorIcon className={classes.warning} />\n          ) : (\n            <CheckCircleIcon className={classes.success} />\n          )\n        }\n        disabled={!(markers.length > 0)}\n        size=\"small\"\n      >\n        {`${markers.length} ${markers.length === 1 ? 'issue' : 'issues'}`}\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n        <List dense>\n          {markers.map((marker) => (\n            <ListItem\n              button\n              onClick={() => {\n                handleClose();\n                onMarkerClick(marker);\n              }}\n              key={`${marker.message}${marker.startColumn}${marker.startLineNumber}`}\n            >\n              <ListItemIcon className={classes.ListItemIcon}>\n                {marker.severity === MarkerSeverity.Hint && (\n                  <Tooltip title=\"Severity: Hint\">\n                    <NotesIcon />\n                  </Tooltip>\n                )}\n                {marker.severity === MarkerSeverity.Info && (\n                  <Tooltip title=\"Severity: Info\">\n                    <InfoIcon className={classes.info} />\n                  </Tooltip>\n                )}\n                {marker.severity === MarkerSeverity.Warning && (\n                  <Tooltip title=\"Severity: Warning\">\n                    <WarningIcon className={classes.warning} />\n                  </Tooltip>\n                )}\n                {marker.severity === MarkerSeverity.Error && (\n                  <Tooltip title=\"Severity: Error\">\n                    <ErrorIcon className={classes.error} />\n                  </Tooltip>\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary={`Ln ${marker.startLineNumber}, Col ${marker.startColumn}`}\n                secondary={marker.message}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </Popover>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\n\nimport Button from '@material-ui/core/Button';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  contentRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: theme.spacing(1),\n    gap: theme.spacing(1),\n  },\n  label: {\n    marginRight: theme.spacing(1),\n  },\n  plusChip: {\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nexport function KeyboardShortcuts(): JSX.Element {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'keyboard-shortcuts-popover' : undefined;\n\n  return (\n    <div>\n      <Button\n        aria-describedby={id}\n        color=\"primary\"\n        onClick={handleClick}\n        size=\"small\"\n        startIcon={<KeyboardIcon />}\n      >\n        Keyboard shortcuts\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <div className={classes.contentRoot}>\n          <div>\n            <span className={classes.label}>Auto complete:</span>\n            <Chip variant=\"outlined\" size=\"small\" label=\"ctrl\" />\n            <span className={classes.plusChip}>+</span>\n            <Chip variant=\"outlined\" size=\"small\" label=\"space\" />\n          </div>\n          <div>\n            <span className={classes.label}>Copy:</span>\n            <Chip component=\"span\" variant=\"outlined\" size=\"small\" label=\"ctrl\" />\n            <span className={classes.plusChip}>+</span>\n            <Chip component=\"span\" variant=\"outlined\" size=\"small\" label=\"c\" />\n          </div>\n          <div>\n            <span className={classes.label}>Paste:</span>\n            <Chip component=\"span\" variant=\"outlined\" size=\"small\" label=\"ctrl\" />\n            <span className={classes.plusChip}>+</span>\n            <Chip component=\"span\" variant=\"outlined\" size=\"small\" label=\"v\" />\n          </div>\n          <div>\n            <span className={classes.label}>Format:</span>\n            <Chip component=\"span\" variant=\"outlined\" size=\"small\" label=\"ctrl\" />\n            <span className={classes.plusChip}>+</span>\n            <Chip component=\"span\" variant=\"outlined\" size=\"small\" label=\"shift\" />\n            <span className={classes.plusChip}>+</span>\n            <Chip component=\"span\" variant=\"outlined\" size=\"small\" label=\"i\" />\n          </div>\n          <div>\n            <span className={classes.label}>Command palette:</span>\n            <Chip component=\"span\" variant=\"outlined\" size=\"small\" label=\"f1\" />\n          </div>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { editor as EditorApi } from 'monaco-editor/esm/vs/editor/editor.api';\nimport { IssuesIndicator } from './IssuesIndicator';\nimport { KeyboardShortcuts } from './KeyboardShortcuts';\n\ninterface StyleProps {\n  editorIsFocused: boolean;\n}\nconst useStyles = makeStyles<Theme, StyleProps>((theme) => ({\n  statusBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    borderStyle: 'solid',\n    borderWidth: 0,\n    borderBottomWidth: 2,\n    borderLeftWidth: 2,\n    borderRightWidth: 2,\n    borderBottomRightRadius: theme.spacing(1),\n    borderBottomLeftRadius: theme.spacing(1),\n    borderColor: (props) =>\n      props.editorIsFocused ? theme.palette.primary.main : theme.palette.divider,\n  },\n}));\n\ninterface Props {\n  editorIsFocused: boolean;\n  markers: EditorApi.IMarker[];\n  onMarkerClick: (marker: EditorApi.IMarker) => void;\n}\nexport function StatusBar(props: Props): JSX.Element {\n  const { editorIsFocused, markers, onMarkerClick } = props;\n  const classes = useStyles({ editorIsFocused });\n  return (\n    <div className={classes.statusBar}>\n      <KeyboardShortcuts />\n      <IssuesIndicator markers={markers} onMarkerClick={onMarkerClick} />\n    </div>\n  );\n}\n","import { makeStyles, Theme } from '@material-ui/core/styles';\nimport Editor, { OnMount, loader } from '@monaco-editor/react';\nimport { editor as EditorApi } from 'monaco-editor/esm/vs/editor/editor.api';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { monacoJsonConf, SchemaMatcher, schemaMatcher } from './configureMonaco';\nimport { ConfirmDialog } from './ConfirmDialog';\nimport { EditorToolbar } from './EditorToolbar';\nimport { StatusBar } from './statusBar/StatusBar';\n\nloader.config({ paths: { vs: `${process.env.PUBLIC_URL}/monaco_files/vs` } });\n\ninterface StyleProps {\n  isFocused: boolean;\n}\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) => ({\n  editorWrapper: {\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderColor: (props) => (props.isFocused ? theme.palette.primary.main : theme.palette.divider),\n  },\n}));\n\ninterface Props {\n  value: string | undefined;\n  onSubmit: (value: string) => void;\n  heightInRem: number;\n  editorPath: SchemaMatcher;\n}\nexport function MonacoJsonEditor(props: Props): JSX.Element {\n  const { value, onSubmit, editorPath, heightInRem } = props;\n  const editorRef = useRef<EditorApi.IStandaloneCodeEditor | null>(null);\n  const [editorValue, setEditorValue] = useState<string | undefined>(value);\n  const [isFocused, setFocused] = useState(false);\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const [editorMarkers, setEditorMarkers] = useState<EditorApi.IMarker[]>([]);\n  const classes = useStyles({ isFocused });\n\n  // /\n  useEffect(() => setEditorValue(value), [value]);\n\n  const editorOnMount: OnMount = (editor, monaco) => {\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions(monacoJsonConf);\n    editorRef.current = editor;\n    editor.getModel()?.updateOptions({ tabSize: 2 });\n    editor.onDidFocusEditorText(() => setFocused(true));\n    editor.onDidBlurEditorText(() => setFocused(false));\n  };\n  const handleFormat = () => {\n    editorRef.current?.trigger('external toolbar', 'editor.action.formatDocument', undefined);\n  };\n  const handleSave = () => {\n    setConfirmDialogOpen(true);\n  };\n  const handleMarkerClick = (marker: EditorApi.IMarker) => {\n    editorRef.current?.setSelection({\n      startLineNumber: marker.startLineNumber,\n      endLineNumber: marker.endLineNumber,\n      startColumn: marker.startColumn,\n      endColumn: marker.endColumn,\n    });\n  };\n\n  return (\n    <div>\n      <EditorToolbar onSave={handleSave} onFormat={handleFormat} />\n      <div className={classes.editorWrapper}>\n        <Editor\n          onMount={editorOnMount}\n          height={`${heightInRem}rem`}\n          defaultLanguage=\"json\"\n          value={editorValue}\n          onChange={(val) => setEditorValue(val)}\n          path={schemaMatcher[editorPath]}\n          onValidate={(markers) => setEditorMarkers(markers)}\n        />\n      </div>\n      <StatusBar\n        editorIsFocused={isFocused}\n        markers={editorMarkers}\n        onMarkerClick={handleMarkerClick}\n      />\n      <ConfirmDialog\n        isOpen={isConfirmDialogOpen}\n        onClose={() => setConfirmDialogOpen(false)}\n        originalValue={value ?? ''}\n        modifiedValue={editorValue}\n        onConfirm={() => onSubmit(editorValue ?? '')}\n      />\n    </div>\n  );\n}\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const dashcoreApi = createApi({\n  reducerPath: 'dashcoreApi',\n  refetchOnMountOrArgChange: true,\n  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n  tagTypes: ['DeliveryConfig', 'TrackingConfig'],\n  endpoints: () => ({\n    // following code-splitting pattern described here:\n    // https://redux-toolkit.js.org/rtk-query/usage/code-splitting\n  }),\n});\n","import type { GetDeliveryConfigResultType, UpdateDeliveryConfigQueryArgs } from './apiTypes';\nimport { dashcoreApi } from './dashcoreApi';\n\nexport const deliveryConfigApi = dashcoreApi.injectEndpoints({\n  overrideExisting: false,\n  endpoints: (builder) => ({\n    getDeliveryConfig: builder.query<GetDeliveryConfigResultType, void>({\n      query: () => `${process.env.PUBLIC_URL}/deliveryconfig`,\n      providesTags: ['DeliveryConfig'],\n    }),\n    updateDeliveryConfig: builder.mutation<void, UpdateDeliveryConfigQueryArgs>({\n      query: (queryArgs) => ({\n        url: `${process.env.PUBLIC_URL}/deliveryconfig`,\n        method: 'PUT',\n        body: queryArgs,\n      }),\n      invalidatesTags: ['DeliveryConfig'],\n    }),\n  }),\n});\n\nexport const { useGetDeliveryConfigQuery, useUpdateDeliveryConfigMutation } = deliveryConfigApi;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { MonacoJsonEditor } from './monacoJsonEditor/MonacoJsonEditor';\nimport {\n  useGetDeliveryConfigQuery,\n  useUpdateDeliveryConfigMutation,\n} from './redux/api/deliveryConfigApi';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appRoot: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport function App(): JSX.Element {\n  const classes = useStyles();\n  const { jsonString } = useGetDeliveryConfigQuery(undefined, {\n    selectFromResult: (result) => ({ jsonString: result.data?.value, ...result }),\n  });\n\n  const [updateTrigger] = useUpdateDeliveryConfigMutation();\n  return (\n    <div className={classes.appRoot}>\n      <Typography variant=\"h4\">Legacy json app</Typography>\n      <br />\n      <MonacoJsonEditor\n        value={jsonString}\n        onSubmit={(val) => updateTrigger({ value: val })}\n        heightInRem={14}\n        editorPath=\"DELIVERY_CONFIG\"\n      />\n    </div>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { dashcoreApi } from './api/dashcoreApi';\n\nexport const store = configureStore({\n  reducer: {\n    [dashcoreApi.reducerPath]: dashcoreApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(dashcoreApi.middleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { rest } from 'msw';\nimport {\n  GetDeliveryConfigResultType,\n  GetTrackingConfigResultType,\n  UpdateDeliveryConfigQueryArgs,\n  UpdateTrackingConfigQueryArgs,\n} from '../redux/api/apiTypes';\n\nlet deliveryConfig: GetDeliveryConfigResultType = {\n  value: `          {\n  \"signature_required\": \"yes indeed\", \"customer_id\": \"1235339\", \"service_tier\": \"invalid enum val\",\n  \"address\": {\n    \"addressee\": \"Stringer Bell\",\n    \"premise_identifier\": \"Barksdale towers\",\n  },\n  \"handling_tags\": [\n    \"fragile\",\n    \"fragile\"\n  ],\n  \"dimensions\": {\n    \"width\": -1,\n    \"height\": 4,\n    \"depth\": 1001\n  }\n}\n`,\n};\n\nlet trackingConfig: GetTrackingConfigResultType = {\n  value: `{\n \"trackingId\": 963258865235698523414741635649366\n}\n`,\n};\n\nexport const handlers = [\n  rest.get(`${process.env.PUBLIC_URL}/deliveryconfig`, (req, res, ctx) =>\n    res(ctx.status(200), ctx.json(deliveryConfig))\n  ),\n\n  rest.put<UpdateDeliveryConfigQueryArgs>(\n    `${process.env.PUBLIC_URL}/deliveryconfig`,\n    (req, res, ctx) => {\n      const { value } = req.body;\n      deliveryConfig = { value };\n      return res(ctx.status(200));\n    }\n  ),\n\n  rest.get(`${process.env.PUBLIC_URL}/trackingconfig`, (req, res, ctx) =>\n    res(ctx.status(200), ctx.json(trackingConfig))\n  ),\n\n  rest.put<UpdateTrackingConfigQueryArgs>(\n    `${process.env.PUBLIC_URL}/trackingconfig`,\n    (req, res, ctx) => {\n      const { value } = req.body;\n      trackingConfig = { value };\n      return res(ctx.status(200));\n    }\n  ),\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n","import '@fontsource/roboto';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, unstable_createMuiStrictModeTheme, CssBaseline } from '@material-ui/core';\nimport { Provider } from 'react-redux';\n\nimport { App } from './App';\nimport { store } from './redux/store';\nimport { worker } from './mocks/browser';\n\nconst rootNode = document.getElementById('root') as HTMLElement;\nconst theme = unstable_createMuiStrictModeTheme();\n\nworker.start({\n  onUnhandledRequest: 'bypass',\n  serviceWorker: {\n    url: `${process.env.PUBLIC_URL}/mockServiceWorker.js`,\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  rootNode\n);\n"],"sourceRoot":""}